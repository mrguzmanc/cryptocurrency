{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marco\\\\Desktop\\\\criptomoney\\\\src\\\\components\\\\Formulario.js\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport Error from \"./Error\";\nimport useMoney from \"../hooks/useMoney\";\nimport useCryptomoney from \"../hooks/useCryptomoney\";\nimport axios from \"axios\";\nimport { Fonts } from \"./../fonts/utils/constant\";\nconst Button = styled.input`\n  margin-top: 20px;\n  font-weight: bold;\n  font-size: 20px;\n  padding: 10px;\n  background-color: #66a2fe;\n  border: none;\n  width: 100%;\n  border-radius: 10px;\n  color: #fff;\n  transition: background-color 0.3s ease;\n  font-family: ${Fonts.normalJosefin};\n  text-transform: uppercase;\n\n  &:hover {\n    background-color: #326ac0;\n    cursor: pointer;\n  }\n`;\n\nconst Formulario = ({\n  saveCurrency,\n  saveCryptoCurrency\n}) => {\n  const [cryptoList, saveCryptomoney] = useState([]);\n  const [error, saveError] = useState(false);\n  const Currency = [{\n    code: \"USD\",\n    name: \"American Dollar\"\n  }, {\n    code: \"EUR\",\n    name: \"Euro\"\n  }, {\n    code: \"GBP\",\n    name: \"Pound Sterling\"\n  }]; // Use useMoney\n\n  const [state, Select, updateState] = useMoney(\"Choose a currency\", \"\", Currency); // Use Criptomoney\n\n  const [cryptomoney, SelectCrypto] = useCryptomoney(\"Choose a cryptocurrency\", \"\", cryptoList); // API call\n\n  useEffect(() => {\n    const callAPI = async () => {\n      const url = \"https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD\";\n      const result = await axios.get(url);\n      saveCryptomoney(result.data.Data);\n    };\n\n    callAPI();\n  }, []);\n\n  const calculate = e => {\n    e.preventDefault(); //both fields selected validation\n\n    if (state === \"\" || cryptomoney === \"\") {\n      saveError(true);\n      return;\n    }\n\n    saveError(false);\n    saveCurrency(state);\n    saveCryptoCurrency(cryptomoney);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: calculate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, error ? /*#__PURE__*/React.createElement(Error, {\n    message: \"All fields are required.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 16\n    }\n  }) : null, /*#__PURE__*/React.createElement(Select, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SelectCrypto, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    value: \"Calculate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Formulario;","map":{"version":3,"sources":["C:/Users/marco/Desktop/criptomoney/src/components/Formulario.js"],"names":["React","useEffect","useState","styled","Error","useMoney","useCryptomoney","axios","Fonts","Button","input","normalJosefin","Formulario","saveCurrency","saveCryptoCurrency","cryptoList","saveCryptomoney","error","saveError","Currency","code","name","state","Select","updateState","cryptomoney","SelectCrypto","callAPI","url","result","get","data","Data","calculate","e","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,2BAAtB;AAEA,MAAMC,MAAM,GAAGN,MAAM,CAACO,KAAM;;;;;;;;;;;iBAWXF,KAAK,CAACG,aAAc;;;;;;;CAXrC;;AAoBA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAD,KAA0C;AAC3D,QAAM,CAACC,UAAD,EAAaC,eAAb,IAAgCd,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACe,KAAD,EAAQC,SAAR,IAAqBhB,QAAQ,CAAC,KAAD,CAAnC;AAEA,QAAMiB,QAAQ,GAAG,CACf;AAAEC,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,IAAI,EAAE;AAArB,GADe,EAEf;AAAED,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,IAAI,EAAE;AAArB,GAFe,EAGf;AAAED,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,IAAI,EAAE;AAArB,GAHe,CAAjB,CAJ2D,CAU3D;;AACA,QAAM,CAACC,KAAD,EAAQC,MAAR,EAAgBC,WAAhB,IAA+BnB,QAAQ,CAC3C,mBAD2C,EAE3C,EAF2C,EAG3Cc,QAH2C,CAA7C,CAX2D,CAiB3D;;AACA,QAAM,CAACM,WAAD,EAAcC,YAAd,IAA8BpB,cAAc,CAChD,yBADgD,EAEhD,EAFgD,EAGhDS,UAHgD,CAAlD,CAlB2D,CAwB3D;;AACAd,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM0B,OAAO,GAAG,YAAY;AAC1B,YAAMC,GAAG,GACP,yEADF;AAGA,YAAMC,MAAM,GAAG,MAAMtB,KAAK,CAACuB,GAAN,CAAUF,GAAV,CAArB;AACAZ,MAAAA,eAAe,CAACa,MAAM,CAACE,IAAP,CAAYC,IAAb,CAAf;AACD,KAND;;AAOAL,IAAAA,OAAO;AACR,GATQ,EASN,EATM,CAAT;;AAWA,QAAMM,SAAS,GAAIC,CAAD,IAAO;AACvBA,IAAAA,CAAC,CAACC,cAAF,GADuB,CAGvB;;AACA,QAAIb,KAAK,KAAK,EAAV,IAAgBG,WAAW,KAAK,EAApC,EAAwC;AACtCP,MAAAA,SAAS,CAAC,IAAD,CAAT;AACA;AACD;;AACDA,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAL,IAAAA,YAAY,CAACS,KAAD,CAAZ;AACAR,IAAAA,kBAAkB,CAACW,WAAD,CAAlB;AACD,GAXD;;AAaA,sBACE;AAAM,IAAA,QAAQ,EAAEQ,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,KAAK,gBAAG,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAkD,IAD1D,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,KAAK,EAAC,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAQD,CAzDD;;AA2DA,eAAeL,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport Error from \"./Error\";\r\nimport useMoney from \"../hooks/useMoney\";\r\nimport useCryptomoney from \"../hooks/useCryptomoney\";\r\nimport axios from \"axios\";\r\nimport { Fonts } from \"./../fonts/utils/constant\";\r\n\r\nconst Button = styled.input`\r\n  margin-top: 20px;\r\n  font-weight: bold;\r\n  font-size: 20px;\r\n  padding: 10px;\r\n  background-color: #66a2fe;\r\n  border: none;\r\n  width: 100%;\r\n  border-radius: 10px;\r\n  color: #fff;\r\n  transition: background-color 0.3s ease;\r\n  font-family: ${Fonts.normalJosefin};\r\n  text-transform: uppercase;\r\n\r\n  &:hover {\r\n    background-color: #326ac0;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Formulario = ({ saveCurrency, saveCryptoCurrency }) => {\r\n  const [cryptoList, saveCryptomoney] = useState([]);\r\n  const [error, saveError] = useState(false);\r\n\r\n  const Currency = [\r\n    { code: \"USD\", name: \"American Dollar\" },\r\n    { code: \"EUR\", name: \"Euro\" },\r\n    { code: \"GBP\", name: \"Pound Sterling\" },\r\n  ];\r\n\r\n  // Use useMoney\r\n  const [state, Select, updateState] = useMoney(\r\n    \"Choose a currency\",\r\n    \"\",\r\n    Currency\r\n  );\r\n\r\n  // Use Criptomoney\r\n  const [cryptomoney, SelectCrypto] = useCryptomoney(\r\n    \"Choose a cryptocurrency\",\r\n    \"\",\r\n    cryptoList\r\n  );\r\n\r\n  // API call\r\n  useEffect(() => {\r\n    const callAPI = async () => {\r\n      const url =\r\n        \"https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD\";\r\n\r\n      const result = await axios.get(url);\r\n      saveCryptomoney(result.data.Data);\r\n    };\r\n    callAPI();\r\n  }, []);\r\n\r\n  const calculate = (e) => {\r\n    e.preventDefault();\r\n\r\n    //both fields selected validation\r\n    if (state === \"\" || cryptomoney === \"\") {\r\n      saveError(true);\r\n      return;\r\n    }\r\n    saveError(false);\r\n    saveCurrency(state);\r\n    saveCryptoCurrency(cryptomoney);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={calculate}>\r\n      {error ? <Error message=\"All fields are required.\" /> : null}\r\n      <Select />\r\n      <SelectCrypto />\r\n      <Button type=\"submit\" value=\"Calculate\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Formulario;\r\n"]},"metadata":{},"sourceType":"module"}