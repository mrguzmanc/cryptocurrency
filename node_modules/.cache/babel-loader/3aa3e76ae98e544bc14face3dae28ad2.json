{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marco\\\\Desktop\\\\cryptocurrency\\\\src\\\\hooks\\\\useCryptomoney.js\";\nimport React, { Fragment, useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Fonts } from \"./../fonts/utils/constant\";\nconst Label = styled.div`\n  color: #fff;\n  text-transform: uppercase;\n  font-weight: bold;\n  font-size: 1.7rem;\n  margin-top: 2rem;\n  display: block;\n`;\nconst Selection = styled.select`\n  width: 100%;\n  display: block;\n  padding: 1rem;\n  -webkit-appearance: 10px;\n  border-radius: 10px;\n  border: none;\n  font-size: 1.2rem;\n  font-family: ${Fonts.normalJosefin};\n`;\n\nconst useCryptomoney = (label, initialState, Currency) => {\n  const [state, updateState] = useState(initialState);\n\n  const SelectCripto = () => /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, label), /*#__PURE__*/React.createElement(Selection, {\n    onChange: e => updateState(e.target.value),\n    value: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"--Select a cryptocurrency--\"), Currency.map(option => /*#__PURE__*/React.createElement(\"option\", {\n    key: option.CoinInfo.Id,\n    value: option.CoinInfo.Name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, option.CoinInfo.FullName))));\n\n  return [state, SelectCripto, updateState];\n};\n\nexport default useCryptomoney;","map":{"version":3,"sources":["C:/Users/marco/Desktop/cryptocurrency/src/hooks/useCryptomoney.js"],"names":["React","Fragment","useState","styled","Fonts","Label","div","Selection","select","normalJosefin","useCryptomoney","label","initialState","Currency","state","updateState","SelectCripto","e","target","value","map","option","CoinInfo","Id","Name","FullName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,KAAT,QAAsB,2BAAtB;AAEA,MAAMC,KAAK,GAAGF,MAAM,CAACG,GAAI;;;;;;;CAAzB;AASA,MAAMC,SAAS,GAAGJ,MAAM,CAACK,MAAO;;;;;;;;iBAQfJ,KAAK,CAACK,aAAc;CARrC;;AAWA,MAAMC,cAAc,GAAG,CAACC,KAAD,EAAQC,YAAR,EAAsBC,QAAtB,KAAmC;AACxD,QAAM,CAACC,KAAD,EAAQC,WAAR,IAAuBb,QAAQ,CAACU,YAAD,CAArC;;AAEA,QAAMI,YAAY,GAAG,mBACnB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQL,KAAR,CADF,eAEE,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAGM,CAAD,IAAOF,WAAW,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAvC;AAAyD,IAAA,KAAK,EAAEL,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,EAEGD,QAAQ,CAACO,GAAT,CAAcC,MAAD,iBACZ;AAAQ,IAAA,GAAG,EAAEA,MAAM,CAACC,QAAP,CAAgBC,EAA7B;AAAiC,IAAA,KAAK,EAAEF,MAAM,CAACC,QAAP,CAAgBE,IAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,MAAM,CAACC,QAAP,CAAgBG,QADnB,CADD,CAFH,CAFF,CADF;;AAcA,SAAO,CAACX,KAAD,EAAQE,YAAR,EAAsBD,WAAtB,CAAP;AACD,CAlBD;;AAoBA,eAAeL,cAAf","sourcesContent":["import React, { Fragment, useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { Fonts } from \"./../fonts/utils/constant\";\r\n\r\nconst Label = styled.div`\r\n  color: #fff;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  font-size: 1.7rem;\r\n  margin-top: 2rem;\r\n  display: block;\r\n`;\r\n\r\nconst Selection = styled.select`\r\n  width: 100%;\r\n  display: block;\r\n  padding: 1rem;\r\n  -webkit-appearance: 10px;\r\n  border-radius: 10px;\r\n  border: none;\r\n  font-size: 1.2rem;\r\n  font-family: ${Fonts.normalJosefin};\r\n`;\r\n\r\nconst useCryptomoney = (label, initialState, Currency) => {\r\n  const [state, updateState] = useState(initialState);\r\n\r\n  const SelectCripto = () => (\r\n    <Fragment>\r\n      <Label>{label}</Label>\r\n      <Selection onChange={(e) => updateState(e.target.value)} value={state}>\r\n        <option value=\"\">--Select a cryptocurrency--</option>\r\n        {Currency.map((option) => (\r\n          <option key={option.CoinInfo.Id} value={option.CoinInfo.Name}>\r\n            {option.CoinInfo.FullName}\r\n          </option>\r\n        ))}\r\n      </Selection>\r\n    </Fragment>\r\n  );\r\n\r\n  return [state, SelectCripto, updateState];\r\n};\r\n\r\nexport default useCryptomoney;\r\n"]},"metadata":{},"sourceType":"module"}