{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marco\\\\Desktop\\\\criptomoney\\\\src\\\\hooks\\\\useMoney.js\";\nimport React, { Fragment, useState } from \"react\";\nimport styled from \"@emotion/styled\";\nconst Label = styled.div`\n  color: #fff;\n  text-transform: uppercase;\n  font-weight: bold;\n  font-size: 2.4rem;\n  margin-top: 2rem;\n  display: block;\n`;\nconst Select = styled.select`\n  width: 100%;\n  display: block;\n  padding: 1rem;\n  --webkit-appearance: 10px;\n  border: none;\n  font-size: 1.2rem;\n`;\n\nconst useMoney = (label, initialState, Currency) => {\n  const [state, updateState] = useState(initialState);\n\n  const Select = () => /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, label), /*#__PURE__*/React.createElement(Select, {\n    onChange: e => updateState(e.target.value),\n    value: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"--Select a currency--\"), Currency.map(option => /*#__PURE__*/React.createElement(\"option\", {\n    key: option.code,\n    value: option.code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, option.name))));\n\n  return [state, Select, updateState];\n};\n\nexport default useMoney;","map":{"version":3,"sources":["C:/Users/marco/Desktop/criptomoney/src/hooks/useMoney.js"],"names":["React","Fragment","useState","styled","Label","div","Select","select","useMoney","label","initialState","Currency","state","updateState","e","target","value","map","option","code","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,MAAMC,KAAK,GAAGD,MAAM,CAACE,GAAI;;;;;;;CAAzB;AASA,MAAMC,MAAM,GAAGH,MAAM,CAACI,MAAO;;;;;;;CAA7B;;AASA,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,YAAR,EAAsBC,QAAtB,KAAmC;AAClD,QAAM,CAACC,KAAD,EAAQC,WAAR,IAAuBX,QAAQ,CAACQ,YAAD,CAArC;;AAEA,QAAMJ,MAAM,GAAG,mBACb,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQG,KAAR,CADF,eAEE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAGK,CAAD,IAAOD,WAAW,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAApC;AAAsD,IAAA,KAAK,EAAEJ,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEGD,QAAQ,CAACM,GAAT,CAAcC,MAAD,iBACZ;AAAQ,IAAA,GAAG,EAAEA,MAAM,CAACC,IAApB;AAA0B,IAAA,KAAK,EAAED,MAAM,CAACC,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,MAAM,CAACE,IADV,CADD,CAFH,CAFF,CADF;;AAcA,SAAO,CAACR,KAAD,EAAQN,MAAR,EAAgBO,WAAhB,CAAP;AACD,CAlBD;;AAoBA,eAAeL,QAAf","sourcesContent":["import React, { Fragment, useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst Label = styled.div`\r\n  color: #fff;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  font-size: 2.4rem;\r\n  margin-top: 2rem;\r\n  display: block;\r\n`;\r\n\r\nconst Select = styled.select`\r\n  width: 100%;\r\n  display: block;\r\n  padding: 1rem;\r\n  --webkit-appearance: 10px;\r\n  border: none;\r\n  font-size: 1.2rem;\r\n`;\r\n\r\nconst useMoney = (label, initialState, Currency) => {\r\n  const [state, updateState] = useState(initialState);\r\n\r\n  const Select = () => (\r\n    <Fragment>\r\n      <Label>{label}</Label>\r\n      <Select onChange={(e) => updateState(e.target.value)} value={state}>\r\n        <option value=\"\">--Select a currency--</option>\r\n        {Currency.map((option) => (\r\n          <option key={option.code} value={option.code}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </Select>\r\n    </Fragment>\r\n  );\r\n\r\n  return [state, Select, updateState];\r\n};\r\n\r\nexport default useMoney;\r\n"]},"metadata":{},"sourceType":"module"}